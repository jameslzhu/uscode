#!/usr/bin/env python3

from __future__ import print_function
from __future__ import unicode_literals
import sys
import os
import logging
import traceback
import pprint as pp
import argparse
import importlib

# depends on tasks/[task_name].py being present relative to this directory
sys.path.append(os.path.join(__file__, "tasks"))
import tasks
import tasks.utils

def main():
    logging.getLogger().addHandler(logging.StreamHandler())

    parser = argparse.ArgumentParser(description='Task runner.')
    parser.add_argument('task', help='task to be performed')
    parser.add_argument('args', nargs=argparse.REMAINDER, help='task arguments')

    args = parser.parse_args()

    options = {}

    # Parse passthrough args
    for arg in args.args:
        if '=' in arg:
            key, value = arg.split('=')
        else:
            key, value = arg, True
        
        key = key.lstrip('-')
        if value.lower() == 'true':
            value = True
        elif value.lower() == 'false':
            value = False
        options[key.lower()] = value

    try:
        importlib.import_module('tasks.{}'.format(args.task)).run(options)
        # __import__(args.task).run(options)
    except Exception as exception:
        print(tasks.utils.format_exception(exception))

if __name__ == '__main__':
    main()
